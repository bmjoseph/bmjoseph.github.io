<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog_Name</title>
    <link>/</link>
    <description>Recent content on Blog_Name</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Searching for the Optimal Nine Card Strategy</title>
      <link>/2021/01/30/searching-for-the-optimal-nine-card-strategy/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/01/30/searching-for-the-optimal-nine-card-strategy/</guid>
      <description>Introduction Psychology and Motivation Rules of Nine Card Approach  Code Structure/Architecture  Strategies Analysis + Results  Marathoner vs Conservative Strategy: Conservative Strategy Grid Aggressive vs Conservative Strategy: Dynamic (Turn Based) Knock Strategy  Conclusion and Future Analyses   Introduction Nine Card is a simple rummy style card game with one major complication – any player can end the game when they feel they have the best chance to win.</description>
    </item>
    
    <item>
      <title>Playing Around with The Office Script</title>
      <link>/2020/04/04/playing-around-with-the-office-script/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/04/04/playing-around-with-the-office-script/</guid>
      <description>This post will be a little bit different from most, in that I’m going to show all of my code.
file_path &amp;lt;- &amp;quot;../../static/data/office&amp;quot; theme_clean &amp;lt;- function() { theme_bw(base_size = 11) + theme(text = element_text(family = &amp;quot;Roboto&amp;quot;), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank(), panel.background = element_rect(colour = &amp;quot;#E1E1E1&amp;quot;), panel.border = element_blank()) } library(scales) library(lubridate) library(readr) library(glue) library(dplyr) library(ggplot2) library(stringr) # Read in the data script &amp;lt;- read_csv(glue(&amp;quot;{file_path}/office_script.</description>
    </item>
    
    <item>
      <title>Setting the Line vs Choosing the Side</title>
      <link>/2020/03/27/setting-the-line-vs-choosing-the-side/</link>
      <pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/27/setting-the-line-vs-choosing-the-side/</guid>
      <description>Your friend comes up to you and asks if you want to bet over/under on something, say, the number of words in the first Harry Potter book. You’re always in for a bet, so he sets the line at 100,000 words and asks you to pick a side. This is a fair bet, right?
Assuming that your friend did not set the line exactly right and thus instantly win, the first thing to realize is that this cannot possibly be unfair in favor of your friend.</description>
    </item>
    
    <item>
      <title>Step by Step: Visualizing a Year of Temperatures</title>
      <link>/2020/03/12/step-by-step-visualizing-a-year-of-temperatures/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/12/step-by-step-visualizing-a-year-of-temperatures/</guid>
      <description>Introduction The clocks just sprang forward and it’s finally getting warm in Oklahoma! I was thinking about how different the weather’s been here compared to Berkeley (where I was a year ago) and Los Angeles (where I’ve lived for most of my life). Specifically, I feel like I’ve experienced a lot of different weather this year, and wanted to plot it. This will be a step by step look through my thought process as I designed the plot you see below.</description>
    </item>
    
    <item>
      <title>Visualizing my Walking Data</title>
      <link>/2020/02/14/visualizing-my-walking-data/</link>
      <pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/02/14/visualizing-my-walking-data/</guid>
      <description>I recently (re) downloaded my Apple heath data going back to July 25th, 2016, when I bought my first iPhone. This covers my final three years of college and the roughly 8 months it’s been since I graduated. I’d like to track my walking habits over time, paying specific attention to how things changed when I was in school, on break, or working.
First, let’s just look at the average amount I walked each day during each “period”, or continuous chunk of time where I was either in school, on a school break, working, or waiting to start my next job.</description>
    </item>
    
    <item>
      <title>Simulating Pi Using Buffon&#39;s Needle</title>
      <link>/2019/09/20/buffon-needle/</link>
      <pubDate>Fri, 20 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/09/20/buffon-needle/</guid>
      <description>It figures that Buffon’s needle is one letter away from Buffoon’s needle. You’ve got to be a buffoon to try to estimate \(\pi\) by tossing needles at a piece of paper. Or you’re me, and you’re an even bigger buffoon because you used \(\pi\) to simulate tossing needles at a piece of paper to estimate \(\pi\).
I first learned about Buffon’s needle as a homework problem in one of my stats classes.</description>
    </item>
    
    <item>
      <title>Follow Up: Pokemon Viability and Player Success</title>
      <link>/2019/06/10/follow-up-pokemon-viabiity-and-player-success/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/06/10/follow-up-pokemon-viabiity-and-player-success/</guid>
      <description>In my last post, we saw that Pokemon with higher viability ranks tend to get more usage than Pokemon with low viability ranks. That’s interesting, but it doesn’t really show that higher viability means a Pokemon is better, or even that viability rankings mean anything at all. It could just be that players check the rankings before making their teams. I still won’t be able to prove that viability means anything (for that, we’d need a lot of players to use randomly assigned Pokemon against randomly assigned opponents doing the same thing, probably with a blocked design), but this post will check to see if higher viability Pokemon are relatively more common at the upper end of the ladder.</description>
    </item>
    
    <item>
      <title>Comparing Pokemon Viability and Usage</title>
      <link>/2019/06/08/comparing-pokemon-viability-and-usage/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/06/08/comparing-pokemon-viability-and-usage/</guid>
      <description>For anyone who’s unfamiliar, a company called Smogon has a Pokemon battle simulator called Pokemon Showdown. While you can play in matches that match the official VGC doubles rules, Smogon has their own tier based singles competitions. Tiers are based on how much each pokemon gets used, but the Smogon forums also provide a “viability ranking” for each poekmon in each tier.</description>
    </item>
    
    <item>
      <title>Tornado Plot Animation</title>
      <link>/2019/03/02/torn-plot_anim/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/03/02/torn-plot_anim/</guid>
      <description>I recently thought about the possibility of making art by combining different plots into a gif. I thought back to my time in Oklahoma last summer and experimented with plotting a tornado. Here’s what I came up with. I made the attempt on the left, then the middle, and then finally, the right.
knitr::include_graphics(c(&amp;#39;/images/conv_conf/torn_weak.gif&amp;#39;, &amp;#39;/images/conv_conf/torn.gif&amp;#39;, &amp;quot;/images/conv_conf/torn_best.gif&amp;quot;)) To figure out how to plot this, I started with four goals:</description>
    </item>
    
    <item>
      <title>An Interview Question About Interviews</title>
      <link>/2019/01/14/an-interview-question-about-interviews/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/14/an-interview-question-about-interviews/</guid>
      <description>Setup Simulation Solving Mathematically Different Candidate Pools  Converging to e    Setup I heard of another interesting interview question – this time about interviews.
The setup has a few parts:
A company has set up 100 interviews for a single role. After each interview, the company will know the relative rank of the candidate – how the candidate stacks up against all candidates seen before.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Bailey Joseph&amp;rsquo;s Stats Blog The source code for all articles and the data they need to run can be found right here (on my Github).
To skip straight to the source code (the .Rmd files) for each of my articles, follow this link to the source/post directory.
Please feel free to email me at bmjoseph@berkeley.edu if you have any questions of if you notice that I&amp;rsquo;ve made a mistake.</description>
    </item>
    
    <item>
      <title>Log Loss as a Measure of Accuracy</title>
      <link>/2019/01/09/log-loss-as-a-measure-of-accuracy/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/09/log-loss-as-a-measure-of-accuracy/</guid>
      <description>Motivation Evaluating a binary classifier can be difficult. Suppose you have a model which takes in some data and predicts whether a certain team will beat their opponent. Let’s say that specifically, it returns the probability that the home team wins. How do you know if your model is doing a good job?
What about just a standard accuracy? At first glance, it’s nice to say something like: “My model predicts the correct outcome 80% of the time.</description>
    </item>
    
    <item>
      <title>A Look into Roulette Strategy</title>
      <link>/2019/01/07/a-look-into-roulette-strategy/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/01/07/a-look-into-roulette-strategy/</guid>
      <description>Disclaimer Fixed Spin Gambler Fixed Spins and Fixed Goal House Advantage   I recently made a trip to Las Vegas, so for this post, I want to run some calculations and simulations to check a gambler’s odds of winning according to different goals and situations. I’ll assume every bet is made on a color (or on odd/even) and thus has a fixed \(p = \frac{18}{38}\) of winning.</description>
    </item>
    
    <item>
      <title>An Interesting Expectation Question</title>
      <link>/2018/12/05/an-interesting-expectation-question/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/12/05/an-interesting-expectation-question/</guid>
      <description>Setup My friend recently encountered an interesting interview question. Unfortunately, he couldn’t answer it off the top of his head during the interview. We talked about it later – I couldn’t answer it either. The problem intrigued me, so I’ve passed it around but thus far haven’t found anyone who can give an answer without sitting down and thinking privately.
Anyway, here’s the problem:</description>
    </item>
    
    <item>
      <title>Guide: Intro to Web Scraping</title>
      <link>/2017/11/18/intro-to-web-scraping/</link>
      <pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/18/intro-to-web-scraping/</guid>
      <description>Introduction and Motivation Reading Web Data into R  Background About HTML Using the Package Rvest  Song Lyric Analysis  Data Cleaning with Stringr Scraping and Cleaning More Lyrics for Analysis Analysis of Repetition  Making Word Clouds from Song Lyrics Conclusion Reproducibility References   library(rvest) # For web mining library(stringr) # For cleaning Strings library(dplyr) # For manipulating data frames library(tm) # For text operations necessary to create a word cloud library(wordcloud) # For creating a word cloud library(ggplot2) # For producing visualizations Introduction and Motivation We’ve developed a large toolbox for working with and analyzing strings, but so far we’ve been restricted to looking at strings that we either type out by hand or are easily imported as rows and columns in a csv or other spreadsheet format.</description>
    </item>
    
    <item>
      <title>Guide: Dates in R</title>
      <link>/2017/10/31/dates-in-r/</link>
      <pubDate>Tue, 31 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/31/dates-in-r/</guid>
      <description>Introduction and Motivation Converting to Objects of Class “Date”  Lubridate  Inconvenient or Uncommon Cases   Operations with Dates Using Dates to Manipulate Datasets  Tracking Values with Respect to Time Linear Regression Using Time Data  Conclusion References:   ## You&amp;#39;ll need to have the following packages installed and loaded: library(lubridate) # For dealing with dates library(ggplot2) # For creating visuals and plots library(dplyr) # For working with the data library(readr) # For importing csv data files Introduction and Motivation We have many ways of writing down and understanding dates in English.</description>
    </item>
    
  </channel>
</rss>